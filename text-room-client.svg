<?xml version="1.0" encoding="UTF-8"?><!-- Do not edit this file with editors other than diagrams.net --><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="661px" height="280px" viewBox="-0.5 -0.5 661 280" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-12-21T01:47:29.355Z&quot; agent=&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36&quot; etag=&quot;ns1yQWYhI8sS0-k7s2o4&quot; version=&quot;15.9.4&quot; type=&quot;google&quot;&gt;&lt;diagram id=&quot;XEhzuU5tUYA4jic8VP73&quot; name=&quot;Page-1&quot;&gt;7Vrbbuo4FP0apJkHjmKHBHgstJ3z0M5UbaWZPprEgHWcGDmmhfP1s504F3KBlJbCmYlUqfH2NXsv22tt0rOnweYPSVbLe+FT3sOWv+nZ1z2MER6P4J+2bI1l7NiJZSGZb2y54Yn9pMZoGeua+TTaaaiE4Iqtdo2eCEPqqR0bkVK87TabC74764osaMXw5BFetf7NfLVMrCM8zO3fKVss05mRO05qApI2Nm8SLYkv3gom+6ZnT6UQKnkKNlPKtfdSvyT9bhtqs4VJGqo2HcTjX3g6VS9qZt0vFPJvX3m/b0Z5JXxtXviZbtSjEMGUMz1wsnS1Tf0RvbGAkxBKk7kI1ZOpQVAmnC1CePagH5VgeKVSMXDllalQYgVWb8m4f0e2Yq2XHSni/UhLk6WQ7CcMS7gZE6qlMqjA7k6LJ90TzBZYJY2gzUPqC1Qy3ZPNTsM7Eilj8ATnZBWxWfYaAZELFk6EUiIwjeaM86ngQsY+sOdz6npevDopftBCjT8czyzdw7gVHEA3jfFCGQpg/1ARUCW30MR0sF0DHLN1+uN0T7zlQERpo2UBhCPX4N9gf5GNncMDHgxC3oEWXEFLD0/0rmJUb6srvTm3K1oBDThB7XVXk4NTSHE6V42AilbEY+HiLm5zPcgtj8Yl2iSg75zH+2/JfJ+GGgxCEUWSyOtVrAQLVewzZwJ/4Nmp9c3pObCkKZRRXoY/3VyqqQjhrQiLQ0oBVm9UQ6td/Jt3ZBUUBgTYbQcBfCoI2DUQKEWbs/h4SKKdHpro+CgHEC9O87A+66hf91El9HY19HZNmDmZUf4gIqaY0OPLpG0p/Ici/MG9f0TsHdxy+58o9IOG3Q+jL4X/m975v3eHwBccAm7Le+Bkh4Bz+BCgoX+l6ReUZlzoi3rik2hJfXMWQP0t07PGToeSueQR1pe8ClICIMU69ONecbsNU//oZ4hAUnop1FxvioXt0Zc3xEZuC9Po4ku2bijkE8WldKbECdSvMMrSlQ+OEmvp0cO8DNjPgu4FyqgeKXXQkJQTxV53F1eHDTPcg94JOR/BdomPjOzSGMlbmW5FJloaqcpsyiMl710ZKQZr9pbH49dtZL03rxCq7ySEC0d23Pds3Bfhi+O+w477nvzacy+b+4467ns67rs/9ufmvuOO+17GIXB27pteRC3Jr89IIEL/ecnCPawXD/ay3oyPFtlogZw28NEjmK/h16jIrjOuXc+vP5H1DluyXvxlpNd1SkQEWah0xrRlvc64MpTztbQXVbO9cIr9mYqNIoAhmnf6qtiF5UGWm11XMddsPFmu9x0QJpNvOvey/Plh0WzVw8IM37e+4UH6e8R2Z8pjQZI2EfN5RE8TsmrKNZUqVyvWKZSzKRTXujiFgupys51E+eTMXMPdcykaBdVlaTuR8kki5UD0z61SUF1itpMp5zgIzq9TqknOY3QKeo9OSbPz71APH8jOZ+n4dmroE3VKetNekFDBg3J2Hh2ZnXeG5ZFc/LUypTbViv4zMqUhwZHLFGvo/GIqpZoZfeBr4OndR0TNMmXk0fqTbjZyBs6pPiJC1ujsOqUpmXqsTskc1uTi/yM9afhh+FJ0Cm6RRm2tU1rG+RfRKe/b/8dE/9w6BdcmIj+uU7qD4N1QOKFOgWL+dXNCNfKPxO2bfwE=&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><defs><clipPath id="mx-clip-254-211-152-26-0"><rect x="254" y="211" width="152" height="26"/></clipPath><clipPath id="mx-clip-254-245-152-26-0"><rect x="254" y="245" width="152" height="26"/></clipPath><clipPath id="mx-clip-14-211-152-26-0"><rect x="14" y="211" width="152" height="26"/></clipPath><clipPath id="mx-clip-14-245-152-26-0"><rect x="14" y="245" width="152" height="26"/></clipPath><clipPath id="mx-clip-494-211-152-26-0"><rect x="494" y="211" width="152" height="26"/></clipPath><clipPath id="mx-clip-494-245-152-26-0"><rect x="494" y="245" width="152" height="26"/></clipPath><clipPath id="mx-clip-254-41-152-26-0"><rect x="254" y="41" width="152" height="26"/></clipPath><clipPath id="mx-clip-254-75-152-26-0"><rect x="254" y="75" width="152" height="26"/></clipPath></defs><g><path d="M 250 206 L 250 180 L 410 180 L 410 206" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="all"/><path d="M 250 206 L 250 266 L 410 266 L 410 206" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 250 206 L 410 206" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="329.5" y="197.5">TextRoomClient</text></g><rect x="250" y="206" width="160" height="26" fill="#ffe6cc" stroke="#d79b00" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-254-211-152-26-0)" font-size="12px"><text x="255.5" y="223.5">+ field: type</text></g><path d="M 250 236 L 410 236" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><rect x="250" y="240" width="160" height="26" fill="#ffe6cc" stroke="#d79b00" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-254-245-152-26-0)" font-size="12px"><text x="255.5" y="257.5">+ method(type): type</text></g><path d="M 330 180 L 330 110.12" fill="none" stroke="#d79b00" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 330 97.12 L 336.5 110.12 L 323.5 110.12 Z" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 10 206 L 10 180 L 170 180 L 170 206" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 10 206 L 10 266 L 170 266 L 170 206" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 10 206 L 170 206" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="89.5" y="197.5">TextRoomEventHandler</text></g><rect x="10" y="206" width="160" height="26" fill="#ffe6cc" stroke="#d79b00" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-14-211-152-26-0)" font-size="12px"><text x="15.5" y="223.5">+ field: type</text></g><path d="M 10 236 L 170 236" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><rect x="10" y="240" width="160" height="26" fill="#ffe6cc" stroke="#d79b00" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-14-245-152-26-0)" font-size="12px"><text x="15.5" y="257.5">+ method(type): type</text></g><path d="M 170 219 L 224.01 219" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 249.01 219 L 236.51 226.35 L 224.01 219 L 236.51 211.65 Z" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 219px; margin-left: 201px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">+N-1</div></div></div></foreignObject><text x="201" y="222" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">+N-1</text></switch></g><path d="M 490 206 L 490 180 L 650 180 L 650 206" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 490 206 L 490 266 L 650 266 L 650 206" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 490 206 L 650 206" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="569.5" y="197.5">TextRoomApi</text></g><rect x="490" y="206" width="160" height="26" fill="#ffe6cc" stroke="#d79b00" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-494-211-152-26-0)" font-size="12px"><text x="495.5" y="223.5">+ field: type</text></g><path d="M 490 236 L 650 236" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><rect x="490" y="240" width="160" height="26" fill="#ffe6cc" stroke="#d79b00" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-494-245-152-26-0)" font-size="12px"><text x="495.5" y="257.5">+ method(type): type</text></g><path d="M 490 219 L 435.99 219" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 410.99 219 L 423.49 211.65 L 435.99 219 L 423.49 226.35 Z" fill="#d79b00" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 221px; margin-left: 454px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; background-color: rgb(255, 255, 255); white-space: nowrap;">+1-1</div></div></div></foreignObject><text x="454" y="224" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px" text-anchor="middle">+1-1</text></switch></g><path d="M 250 36 L 250 10 L 410 10 L 410 36" fill="#f8cecc" stroke="#b85450" stroke-miterlimit="10" pointer-events="none"/><path d="M 250 36 L 250 96 L 410 96 L 410 36" fill="none" stroke="#b85450" stroke-miterlimit="10" pointer-events="none"/><path d="M 250 36 L 410 36" fill="none" stroke="#b85450" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="329.5" y="27.5">PluginClient</text></g><rect x="250" y="36" width="160" height="26" fill="#f8cecc" stroke="#b85450" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-254-41-152-26-0)" font-size="12px"><text x="255.5" y="53.5">+ field: type</text></g><path d="M 250 66 L 410 66" fill="none" stroke="#b85450" stroke-miterlimit="10" pointer-events="none"/><rect x="250" y="70" width="160" height="26" fill="#f8cecc" stroke="#b85450" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-254-75-152-26-0)" font-size="12px"><text x="255.5" y="87.5">+ method(type): type</text></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>